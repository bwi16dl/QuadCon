//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ServerClient.AdminService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Rule", Namespace="http://schemas.datacontract.org/2004/07/BusinessRules")]
    [System.SerializableAttribute()]
    public partial class Rule : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ActionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DayFromField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DayTillField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LinkField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ParameterField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SourceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TimeFromField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TimeTillField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<ServerClient.AdminService.Trigger> TriggersField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Action {
            get {
                return this.ActionField;
            }
            set {
                if ((object.ReferenceEquals(this.ActionField, value) != true)) {
                    this.ActionField = value;
                    this.RaisePropertyChanged("Action");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DayFrom {
            get {
                return this.DayFromField;
            }
            set {
                if ((object.ReferenceEquals(this.DayFromField, value) != true)) {
                    this.DayFromField = value;
                    this.RaisePropertyChanged("DayFrom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DayTill {
            get {
                return this.DayTillField;
            }
            set {
                if ((object.ReferenceEquals(this.DayTillField, value) != true)) {
                    this.DayTillField = value;
                    this.RaisePropertyChanged("DayTill");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Link {
            get {
                return this.LinkField;
            }
            set {
                if ((object.ReferenceEquals(this.LinkField, value) != true)) {
                    this.LinkField = value;
                    this.RaisePropertyChanged("Link");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Parameter {
            get {
                return this.ParameterField;
            }
            set {
                if ((object.ReferenceEquals(this.ParameterField, value) != true)) {
                    this.ParameterField = value;
                    this.RaisePropertyChanged("Parameter");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Source {
            get {
                return this.SourceField;
            }
            set {
                if ((object.ReferenceEquals(this.SourceField, value) != true)) {
                    this.SourceField = value;
                    this.RaisePropertyChanged("Source");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TimeFrom {
            get {
                return this.TimeFromField;
            }
            set {
                if ((object.ReferenceEquals(this.TimeFromField, value) != true)) {
                    this.TimeFromField = value;
                    this.RaisePropertyChanged("TimeFrom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TimeTill {
            get {
                return this.TimeTillField;
            }
            set {
                if ((object.ReferenceEquals(this.TimeTillField, value) != true)) {
                    this.TimeTillField = value;
                    this.RaisePropertyChanged("TimeTill");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<ServerClient.AdminService.Trigger> Triggers {
            get {
                return this.TriggersField;
            }
            set {
                if ((object.ReferenceEquals(this.TriggersField, value) != true)) {
                    this.TriggersField = value;
                    this.RaisePropertyChanged("Triggers");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Trigger", Namespace="http://schemas.datacontract.org/2004/07/BusinessRules")]
    [System.SerializableAttribute()]
    public partial class Trigger : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AttributeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ComparatorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SourceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ThresholdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Attribute {
            get {
                return this.AttributeField;
            }
            set {
                if ((object.ReferenceEquals(this.AttributeField, value) != true)) {
                    this.AttributeField = value;
                    this.RaisePropertyChanged("Attribute");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Comparator {
            get {
                return this.ComparatorField;
            }
            set {
                if ((object.ReferenceEquals(this.ComparatorField, value) != true)) {
                    this.ComparatorField = value;
                    this.RaisePropertyChanged("Comparator");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Source {
            get {
                return this.SourceField;
            }
            set {
                if ((object.ReferenceEquals(this.SourceField, value) != true)) {
                    this.SourceField = value;
                    this.RaisePropertyChanged("Source");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Threshold {
            get {
                return this.ThresholdField;
            }
            set {
                if ((object.ReferenceEquals(this.ThresholdField, value) != true)) {
                    this.ThresholdField = value;
                    this.RaisePropertyChanged("Threshold");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ExposedData", Namespace="http://schemas.datacontract.org/2004/07/BusinessRules.DataCollector")]
    [System.SerializableAttribute()]
    public partial class ExposedData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<string> ActionsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<string> AttributesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SourceField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<string> Actions {
            get {
                return this.ActionsField;
            }
            set {
                if ((object.ReferenceEquals(this.ActionsField, value) != true)) {
                    this.ActionsField = value;
                    this.RaisePropertyChanged("Actions");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<string> Attributes {
            get {
                return this.AttributesField;
            }
            set {
                if ((object.ReferenceEquals(this.AttributesField, value) != true)) {
                    this.AttributesField = value;
                    this.RaisePropertyChanged("Attributes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Source {
            get {
                return this.SourceField;
            }
            set {
                if ((object.ReferenceEquals(this.SourceField, value) != true)) {
                    this.SourceField = value;
                    this.RaisePropertyChanged("Source");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="AdminService.IAdminService")]
    public interface IAdminService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminService/GetBusinessRules", ReplyAction="http://tempuri.org/IAdminService/GetBusinessRulesResponse")]
        System.Collections.Generic.List<ServerClient.AdminService.Rule> GetBusinessRules();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminService/GetBusinessRules", ReplyAction="http://tempuri.org/IAdminService/GetBusinessRulesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<ServerClient.AdminService.Rule>> GetBusinessRulesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminService/GetExposedData", ReplyAction="http://tempuri.org/IAdminService/GetExposedDataResponse")]
        System.Collections.Generic.List<ServerClient.AdminService.ExposedData> GetExposedData();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminService/GetExposedData", ReplyAction="http://tempuri.org/IAdminService/GetExposedDataResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<ServerClient.AdminService.ExposedData>> GetExposedDataAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminService/AddBusinessRule", ReplyAction="http://tempuri.org/IAdminService/AddBusinessRuleResponse")]
        void AddBusinessRule(ServerClient.AdminService.Rule rule);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminService/AddBusinessRule", ReplyAction="http://tempuri.org/IAdminService/AddBusinessRuleResponse")]
        System.Threading.Tasks.Task AddBusinessRuleAsync(ServerClient.AdminService.Rule rule);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminService/RemoveBusinessRule", ReplyAction="http://tempuri.org/IAdminService/RemoveBusinessRuleResponse")]
        void RemoveBusinessRule(ServerClient.AdminService.Rule rule);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminService/RemoveBusinessRule", ReplyAction="http://tempuri.org/IAdminService/RemoveBusinessRuleResponse")]
        System.Threading.Tasks.Task RemoveBusinessRuleAsync(ServerClient.AdminService.Rule rule);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IAdminServiceChannel : ServerClient.AdminService.IAdminService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AdminServiceClient : System.ServiceModel.ClientBase<ServerClient.AdminService.IAdminService>, ServerClient.AdminService.IAdminService {
        
        public AdminServiceClient() {
        }
        
        public AdminServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public AdminServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AdminServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AdminServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Collections.Generic.List<ServerClient.AdminService.Rule> GetBusinessRules() {
            return base.Channel.GetBusinessRules();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<ServerClient.AdminService.Rule>> GetBusinessRulesAsync() {
            return base.Channel.GetBusinessRulesAsync();
        }
        
        public System.Collections.Generic.List<ServerClient.AdminService.ExposedData> GetExposedData() {
            return base.Channel.GetExposedData();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<ServerClient.AdminService.ExposedData>> GetExposedDataAsync() {
            return base.Channel.GetExposedDataAsync();
        }
        
        public void AddBusinessRule(ServerClient.AdminService.Rule rule) {
            base.Channel.AddBusinessRule(rule);
        }
        
        public System.Threading.Tasks.Task AddBusinessRuleAsync(ServerClient.AdminService.Rule rule) {
            return base.Channel.AddBusinessRuleAsync(rule);
        }
        
        public void RemoveBusinessRule(ServerClient.AdminService.Rule rule) {
            base.Channel.RemoveBusinessRule(rule);
        }
        
        public System.Threading.Tasks.Task RemoveBusinessRuleAsync(ServerClient.AdminService.Rule rule) {
            return base.Channel.RemoveBusinessRuleAsync(rule);
        }
    }
}
