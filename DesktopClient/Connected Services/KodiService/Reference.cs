//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DesktopClient.KodiService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="KodiService.IKodiService")]
    public interface IKodiService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKodiService/GetName", ReplyAction="http://tempuri.org/IKodiService/GetNameResponse")]
        string GetName(string sourceName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKodiService/GetName", ReplyAction="http://tempuri.org/IKodiService/GetNameResponse")]
        System.Threading.Tasks.Task<string> GetNameAsync(string sourceName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKodiService/SetName", ReplyAction="http://tempuri.org/IKodiService/SetNameResponse")]
        void SetName(string sourceName, string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKodiService/SetName", ReplyAction="http://tempuri.org/IKodiService/SetNameResponse")]
        System.Threading.Tasks.Task SetNameAsync(string sourceName, string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKodiService/GetSongs", ReplyAction="http://tempuri.org/IKodiService/GetSongsResponse")]
        System.Collections.Generic.Dictionary<int, string> GetSongs(string sourceName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKodiService/GetSongs", ReplyAction="http://tempuri.org/IKodiService/GetSongsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<int, string>> GetSongsAsync(string sourceName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKodiService/PlaySong", ReplyAction="http://tempuri.org/IKodiService/PlaySongResponse")]
        void PlaySong(string sourceName, int songId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKodiService/PlaySong", ReplyAction="http://tempuri.org/IKodiService/PlaySongResponse")]
        System.Threading.Tasks.Task PlaySongAsync(string sourceName, int songId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKodiService/GetPictures", ReplyAction="http://tempuri.org/IKodiService/GetPicturesResponse")]
        System.Collections.Generic.Dictionary<string, string> GetPictures(string sourceName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKodiService/GetPictures", ReplyAction="http://tempuri.org/IKodiService/GetPicturesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetPicturesAsync(string sourceName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKodiService/GetMovies", ReplyAction="http://tempuri.org/IKodiService/GetMoviesResponse")]
        System.Collections.Generic.Dictionary<int, string> GetMovies(string sourceName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKodiService/GetMovies", ReplyAction="http://tempuri.org/IKodiService/GetMoviesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<int, string>> GetMoviesAsync(string sourceName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKodiService/PlayMovie", ReplyAction="http://tempuri.org/IKodiService/PlayMovieResponse")]
        void PlayMovie(string sourceName, int movieId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKodiService/PlayMovie", ReplyAction="http://tempuri.org/IKodiService/PlayMovieResponse")]
        System.Threading.Tasks.Task PlayMovieAsync(string sourceName, int movieId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKodiService/GetPlaylists", ReplyAction="http://tempuri.org/IKodiService/GetPlaylistsResponse")]
        System.Collections.Generic.Dictionary<string, string> GetPlaylists(string sourceName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKodiService/GetPlaylists", ReplyAction="http://tempuri.org/IKodiService/GetPlaylistsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetPlaylistsAsync(string sourceName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKodiService/PlayPause", ReplyAction="http://tempuri.org/IKodiService/PlayPauseResponse")]
        void PlayPause(string sourceName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKodiService/PlayPause", ReplyAction="http://tempuri.org/IKodiService/PlayPauseResponse")]
        System.Threading.Tasks.Task PlayPauseAsync(string sourceName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKodiService/PlayPlaylist", ReplyAction="http://tempuri.org/IKodiService/PlayPlaylistResponse")]
        void PlayPlaylist(string sourceName, string playlistId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKodiService/PlayPlaylist", ReplyAction="http://tempuri.org/IKodiService/PlayPlaylistResponse")]
        System.Threading.Tasks.Task PlayPlaylistAsync(string sourceName, string playlistId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKodiService/PlayPicture", ReplyAction="http://tempuri.org/IKodiService/PlayPictureResponse")]
        void PlayPicture(string sourceName, string pictureId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKodiService/PlayPicture", ReplyAction="http://tempuri.org/IKodiService/PlayPictureResponse")]
        System.Threading.Tasks.Task PlayPictureAsync(string sourceName, string pictureId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKodiService/ChangeVolume", ReplyAction="http://tempuri.org/IKodiService/ChangeVolumeResponse")]
        void ChangeVolume(string sourceName, int volume);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKodiService/ChangeVolume", ReplyAction="http://tempuri.org/IKodiService/ChangeVolumeResponse")]
        System.Threading.Tasks.Task ChangeVolumeAsync(string sourceName, int volume);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IKodiServiceChannel : DesktopClient.KodiService.IKodiService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class KodiServiceClient : System.ServiceModel.ClientBase<DesktopClient.KodiService.IKodiService>, DesktopClient.KodiService.IKodiService {
        
        public KodiServiceClient() {
        }
        
        public KodiServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public KodiServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public KodiServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public KodiServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string GetName(string sourceName) {
            return base.Channel.GetName(sourceName);
        }
        
        public System.Threading.Tasks.Task<string> GetNameAsync(string sourceName) {
            return base.Channel.GetNameAsync(sourceName);
        }
        
        public void SetName(string sourceName, string name) {
            base.Channel.SetName(sourceName, name);
        }
        
        public System.Threading.Tasks.Task SetNameAsync(string sourceName, string name) {
            return base.Channel.SetNameAsync(sourceName, name);
        }
        
        public System.Collections.Generic.Dictionary<int, string> GetSongs(string sourceName) {
            return base.Channel.GetSongs(sourceName);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<int, string>> GetSongsAsync(string sourceName) {
            return base.Channel.GetSongsAsync(sourceName);
        }
        
        public void PlaySong(string sourceName, int songId) {
            base.Channel.PlaySong(sourceName, songId);
        }
        
        public System.Threading.Tasks.Task PlaySongAsync(string sourceName, int songId) {
            return base.Channel.PlaySongAsync(sourceName, songId);
        }
        
        public System.Collections.Generic.Dictionary<string, string> GetPictures(string sourceName) {
            return base.Channel.GetPictures(sourceName);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetPicturesAsync(string sourceName) {
            return base.Channel.GetPicturesAsync(sourceName);
        }
        
        public System.Collections.Generic.Dictionary<int, string> GetMovies(string sourceName) {
            return base.Channel.GetMovies(sourceName);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<int, string>> GetMoviesAsync(string sourceName) {
            return base.Channel.GetMoviesAsync(sourceName);
        }
        
        public void PlayMovie(string sourceName, int movieId) {
            base.Channel.PlayMovie(sourceName, movieId);
        }
        
        public System.Threading.Tasks.Task PlayMovieAsync(string sourceName, int movieId) {
            return base.Channel.PlayMovieAsync(sourceName, movieId);
        }
        
        public System.Collections.Generic.Dictionary<string, string> GetPlaylists(string sourceName) {
            return base.Channel.GetPlaylists(sourceName);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetPlaylistsAsync(string sourceName) {
            return base.Channel.GetPlaylistsAsync(sourceName);
        }
        
        public void PlayPause(string sourceName) {
            base.Channel.PlayPause(sourceName);
        }
        
        public System.Threading.Tasks.Task PlayPauseAsync(string sourceName) {
            return base.Channel.PlayPauseAsync(sourceName);
        }
        
        public void PlayPlaylist(string sourceName, string playlistId) {
            base.Channel.PlayPlaylist(sourceName, playlistId);
        }
        
        public System.Threading.Tasks.Task PlayPlaylistAsync(string sourceName, string playlistId) {
            return base.Channel.PlayPlaylistAsync(sourceName, playlistId);
        }
        
        public void PlayPicture(string sourceName, string pictureId) {
            base.Channel.PlayPicture(sourceName, pictureId);
        }
        
        public System.Threading.Tasks.Task PlayPictureAsync(string sourceName, string pictureId) {
            return base.Channel.PlayPictureAsync(sourceName, pictureId);
        }
        
        public void ChangeVolume(string sourceName, int volume) {
            base.Channel.ChangeVolume(sourceName, volume);
        }
        
        public System.Threading.Tasks.Task ChangeVolumeAsync(string sourceName, int volume) {
            return base.Channel.ChangeVolumeAsync(sourceName, volume);
        }
    }
}
